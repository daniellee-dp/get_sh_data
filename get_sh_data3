#!/bin/bash

local_test="ns"
## egrep regex string of owned IP space
local_ips="172.105.166.31,172.105.176.49,172.105.176.168,172.105.176.169,192.168.135.59,45.79.237.20,172.105.178.191,194.195.126.224,194.195.126.243,192.168.139.242,172.105.161.230,172.105.177.59,172.105.185.93,172.105.188.171,192.168.139.227,45.79.249.137,139.162.163.108,172.104.159.251,172.105.75.48,192.168.173.94,139.162.169.45,172.104.136.197,192.168.173.105,139.162.178.215,139.162.185.151,172.104.135.45,172.104.241.60,192.168.140.119,85.90.244.52,139.144.66.233,172.104.139.50,172.105.70.171,192.168.152.19,139.162.145.75,139.162.177.185,143.42.59.104,194.233.173.60,192.168.153.150,139.144.72.205,139.162.173.93,139.162.182.89,194.233.170.117,192.168.130.21,172.104.133.177,172.104.151.222,172.105.67.62,172.105.251.128,192.168.170.28,139.162.136.135,139.162.143.214,139.162.186.152,192.46.236.38,192.168.139.33,139.162.163.62,139.162.186.154,172.104.156.188,172.104.156.203,192.168.136.26,172.104.153.244,172.104.227.230,172.104.247.50,172.105.71.36,192.168.134.72,85.90.246.115,139.162.154.66,139.162.185.184,172.104.238.52,192.168.134.39,45.79.75.81,45.79.75.231,50.116.5.73,74.207.249.179,74.207.241.102,96.126.96.221,172.105.33.133,172.105.42.181,172.105.47.127,172.105.63.212,192.168.129.116,45.79.117.22,45.79.117.23,172.105.33.197,172.105.55.251,172.105.52.49,172.105.52.64,172.105.54.143,172.105.62.200,192.168.140.236,172.105.41.189,172.105.56.46,172.105.63.144,194.195.112.207,192.168.134.244,172.105.43.65,172.105.56.108,192.168.132.130"
## name server domains owned by brand, considered local
## for ns1/ns2.domain.com, enter "domain.com"
## e.g local_ns="domain.com|whitelabelbrand.com|somens.com"
local_ns="fcomet.com|myfcloud.com|myfcloudin.com|myfcloudto.com|myfcloudau.com|myfcloudtx.com|myfcloudfr.com|myfcloudat.com|myfcloudnw.com|myfclouduk.com|myfcloudsg.com|myfcloudde.com|myfcloudjp.com|myfcloudch.com|myfcloudla.com|myfcloudmi.com|myfcloudwa.com|myfclouddc.com|myfcloudoc.com|myfcloudtn.com|myfcloudid.com|myfcloudse.com|myfcloudnl.com|myfcloudit.com|myfcloudps.com|myfcloudbr.com|mysafedns.com"
if [ "$1" ]; then
	local_ns="$1"
fi

## probably don't need to edit below this point
timeout=1
tries=1
resolvers="74.82.42.42 209.244.0.4 4.2.2.2 8.8.8.8 8.8.4.4 209.244.0.3 209.244.0.4"
host=`hostname`
tmpf="/tmp/.wk$$"

for i in `egrep -H OWNER= /var/cpanel/users/* | tr '/:=' ' ' | awk '{print$4":"$6}'`; do
        user=`echo $i | cut -d':' -f1`
        owner=`echo $i | cut -d':' -f2`
        if [ -f "/var/cpanel/users/$user" ] && [ -d "/var/cpanel/userdata/$user" ]; then
                suspended=`egrep SUSPENDED=1 /var/cpanel/users/$user`
		if [ -z "$suspended" ]; then
			status=1
		else
			status=0
		fi
                assigned_ip=`egrep IP= /var/cpanel/users/$user | cut -d'=' -f2`
                plan=`egrep PLAN= /var/cpanel/users/$user | cut -d'=' -f2`
		contact=`egrep CONTACTEMAIL= /var/cpanel/users/$user | cut -d'=' -f2`
		if [ -z "$contact" ]; then
			contact=unset
		fi
                # main domain
                domain=`egrep main_domain /var/cpanel/userdata/$user/main | awk '{print$2}'`
                echo "$host,$owner,$user,$contact,$status,parent,$domain,$domain,$assigned_ip"
                # addons
                for addon in `cat /var/cpanel/userdata/$user/main | egrep -v cp_php_magic_include_path.conf | awk '/addon_domains/{f=1;next}/main_domain/{f=0}f' | awk '{print$1}' | tr -d ':'`; do
                        echo "$host,$owner,$user,$contact,$status,addon,$domain,$addon,$assigned_ip"
                done
                unset suspended unset status
        fi
done > $tmpf.userstubs

for i in `cat $tmpf.userstubs`; do
	host=`echo $i | cut -d',' -f1`
	owner=`echo $i | cut -d',' -f2`
	user=`echo $i | cut -d',' -f3`
	contact=`echo $i | cut -d',' -f4`
	status=`echo $i | cut -d',' -f5`
	type=`echo $i | cut -d',' -f6`
	pdomain=`echo $i | cut -d',' -f7`
	domain=`echo $i | cut -d',' -f8`
	assigned_ip=`echo $i | cut -d',' -f9`
	prefix="$i"
	if [ "$domain" ]; then
		resolv=`echo "$resolvers" | tr ' ' '\n' | awk 'BEGIN{srand();} {printf "%06d %s\n", rand()*1000000, $0;}' | head -n1 | awk '{print$2}'`
		domain_ip=`dig +time=$timeout +tries=$tries +short $domain @$resolv | head -n1`
		errcheck=`echo $domain_ip | egrep 'connection timed out'`
		if [ "$errcheck" ]; then
			resolv=`echo "$resolvers" | tr ' ' '\n' | grep -v "$resolv" | awk 'BEGIN{srand();} {printf "%06d %s\n", rand()*1000000, $0;}' | head -n1 | awk '{print$2}'`
			domain_ip=`dig +time=$timeout +tries=$tries +short $domain @$resolv | head -n1`
			unset errcheck
			errcheck=`echo $domain_ip | egrep 'connection timed out'`
		fi
		if [ -z "$domain_ip" ] || [ "$errcheck" ]; then
			domain_ip="nxdom"
		fi
		if [ "$domain_ip" == "$assigned_ip" ]; then
			hosted="lhost"
		else
			hosted="rhost"
		fi
		if [ "$domain_ip" == "nxdom" ]; then
			ns="nxdom"
			ns_ip="nxdom"
			ns_iplr="nxdom"
			hosted="zombie"
		else
			resolv=`echo "$resolvers" | tr ' ' '\n' | awk 'BEGIN{srand();} {printf "%06d %s\n", rand()*1000000, $0;}' | head -n1 | awk '{print$2}'`
			ns=`dig +time=$timeout +tries=$tries $domain @$resolv NS | egrep '.*IN.*NS.*' | awk '{print$5}' | egrep -v '^$' | sed 's/.$//' | head -n1`
			errcheck=`echo $ns | egrep 'connection timed out'`
			if [ "$errcheck" ]; then
				resolv=`echo "$resolvers" | tr ' ' '\n' | grep -v "$resolv" | awk 'BEGIN{srand();} {printf "%06d %s\n", rand()*1000000, $0;}' | head -n1 | awk '{print$2}'`
				ns=`dig +time=$timeout +tries=$tries $domain @$resolv NS | egrep '.*IN.*NS.*' | awk '{print$5}' | egrep -v '^$' | sed 's/.$//' | head -n1`
				unset errcheck
				errcheck=`echo $ns | egrep 'connection timed out'`
			fi
			if [ -z "$errcheck" ]; then
				ns_ip=`dig +time=$timeout +tries=$tries +short $ns @$resolv | head -n1`
				errcheck=`echo $ns_ip | egrep 'connection timed out'`
				if [ "$errcheck" ]; then
					resolv=`echo "$resolvers" | tr ' ' '\n' | grep -v "$resolv" | awk 'BEGIN{srand();} {printf "%06d %s\n", rand()*1000000, $0;}' | head -n1 | awk '{print$2}'`
					ns_ip=`dig +time=$timeout +tries=$tries +short $ns @$resolv | head -n1`
					unset errcheck
					errcheck=`echo $ns_ip | egrep 'connection timed out'`
				fi
			else
				ns="nxdom"
				ns_ip="nxdom"
			fi
			if [ "$ns_ip" == "nxdom" ] || [ "$ns" == "nxdom" ] || [ "$domain_ip" ==  "nxdom" ]; then
				ns_iplr=nxdom
			else
				if [ "$local_test" == "ns" ]; then
					ns_iplr=`echo $ns | egrep "$local_ns"`
					if [ "$ns_iplr" ]; then
						ns_iplr=local
					else
						ns_iplr=remote
					fi
				else
					ns_iplr=`echo $ns_ip | egrep "$local_ips"`
					if [ "$ns_iplr" ]; then
						ns_iplr=local
					else
						ns_iplr=remote
					fi
				fi
			fi
		fi
		echo "$prefix,$domain_ip,$hosted,$ns,$ns_ip,$ns_iplr"
	fi
done

rm -f $tmpf.*
